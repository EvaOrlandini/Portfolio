name: Deploy to Hostinger

on:
  push:
    branches:
      - master  # Déclenche le workflow lorsque tu fais un push sur la branche master

jobs:
  web-deploy:
    name: Deploy
    runs-on: ubuntu-latest  # Exécute le workflow sur une machine Ubuntu

    steps:
    - name: Get latest code
      uses: actions/checkout@v3  # Récupère ton code du dépôt GitHub

    - name: Use Node.js 18
      uses: actions/setup-node@v3  # Installe Node.js 18
      with:
        node-version: '18'

    - name: Build Project
      run: |
        npm install
        CI=false npm run build  # Exécute la commande build

    - name: List build directory
      run: ls -la build/  # Pour vérifier que les fichiers sont bien générés

    - name: Sync files
      uses: SamKirkland/FTP-Deploy-Action@v4.3.4  # Action de déploiement FTP
      with:
        server: ${{ secrets.FTP_SERVER }}        # Ton serveur FTP (défini dans les secrets)
        username: ${{ secrets.FTP_USERNAME }}    # Ton nom d'utilisateur FTP (défini dans les secrets)
        password: ${{ secrets.FTP_PASSWORD }}    # Ton mot de passe FTP (défini dans les secrets)
        local-dir: ./build/                      # Le répertoire local à déployer
        server-dir: /domains/evaorlandini.com/public_html/               # Le répertoire distant sur ton serveur Hostinger
        dangerous-clean-slate: false              # Changé à false pour ne pas nettoyer
        exclude: |
          **/.git*
          **/.git*/**
          **/node_modules/**
          projet/**  # Remplacez "projet" par le nom de votre dossier de sous-domaine
        log-level: verbose  # Pour plus de détails dans les logs
